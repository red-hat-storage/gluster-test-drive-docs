{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Red Hat Storage One Alpha Test Drive",

  "Parameters" : {

    "EnabledAZs" : {
      "Description" : "List of AZs enabled for this account and region",
      "Type" : "CommaDelimitedList"
    },

    "KeyName" : {
      "Description" : "Name of an EC2 KeyPair to SSH into instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "Default" : "RHSSHKey",
      "NoEcho": "true",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },


    "CustomerRef" : {
      "Description" : "Red Hat Storage Customer Reference for Tagging Resources",
      "Type" : "String",
      "Default" : "DefaultRef"
    },


    "CustomerEmailRef" : {
      "Description" : "Red Hat Storage Customer Email Reference for Tagging Resources",
      "Type" : "String",
      "Default" : "DefaultEmailRef"
    },


    "NATInstanceType" : {
      "Description" : "NAT Device EC2 instance type",
      "Type" : "String",
      "Default" : "t2.medium",
      "NoEcho": "true"
    },

    "RedHatStorageServerInstanceType" : {
      "Description" : "Red Hat Storage Server EC2 instance type",
      "Type" : "String",
      "Default" : "m3.medium",
      "NoEcho": "true"
    },

    "RedHatStorageClientInstanceType" : {
      "Description" : "Red Hat Storage Clients EC2 instance type",
      "Type" : "String",
      "Default" : "t2.medium",
      "NoEcho": "true"
    }
},

  "Mappings" : {
    
    "AWSNATAMI" : {
      "us-east-1"      : { "AMI" : "ami-dd3dd7cb" },
      "us-west-2"      : { "AMI" : "ami-xxxxxxxx" },
      "us-west-1"      : { "AMI" : "ami-xxxxxxxx" },
      "eu-west-1"      : { "AMI" : "ami-xxxxxxxx" },
      "ap-southeast-1" : { "AMI" : "ami-xxxxxxxx" },
      "ap-northeast-1" : { "AMI" : "ami-xxxxxxxx" },
      "sa-east-1"      : { "AMI" : "ami-xxxxxxxx" }
    },


    "RHSSERVERAMI" : {
      "us-east-1"      : { "AMI" : "ami-b956d1c3" },
      "us-west-2"      : { "AMI" : "ami-xxxxxxxx" },
      "us-west-1"      : { "AMI" : "ami-xxxxxxxx" },
      "eu-west-1"      : { "AMI" : "ami-xxxxxxxx" },
      "ap-southeast-1" : { "AMI" : "ami-xxxxxxxx" },
      "ap-northeast-1" : { "AMI" : "ami-xxxxxxxx" },
      "sa-east-1"      : { "AMI" : "ami-xxxxxxxx" }
    },


    "RHSCLIENTAMI" : {
      "us-east-1"      : { "AMI" : "ami-2051294a" },
      "us-west-2"      : { "AMI" : "ami-xxxxxxxx" },
      "us-west-1"      : { "AMI" : "ami-xxxxxxxx" },
      "eu-west-1"      : { "AMI" : "ami-xxxxxxxx" },
      "ap-southeast-1" : { "AMI" : "ami-xxxxxxxx" },
      "ap-northeast-1" : { "AMI" : "ami-xxxxxxxx" },
      "sa-east-1"      : { "AMI" : "ami-xxxxxxxx" }
    },

    "WINCLIENTAMI" : {
      "us-east-1"      : { "AMI" : "ami-9f226c88" },
      "us-west-2"      : { "AMI" : "ami-xxxxxxxx" },
      "us-west-1"      : { "AMI" : "ami-xxxxxxxx" },
      "eu-west-1"      : { "AMI" : "ami-xxxxxxxx" },
      "ap-southeast-1" : { "AMI" : "ami-xxxxxxxx" },
      "ap-northeast-1" : { "AMI" : "ami-xxxxxxxx" },
      "sa-east-1"      : { "AMI" : "ami-xxxxxxxx" }
    },


    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.100.0.0/16" },
      "Public"  : { "CIDR" : "10.100.0.0/24" },
      "Private1" : { "CIDR" : "10.100.1.0/24" },
      "Private2" : { "CIDR" : "10.100.2.0/24" }
    }
},

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
          { "Key": "Name", "Value" : "VPC"}
        ]
      }
    },


    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ]},
        "AvailabilityZone": { "Fn::Select" : [ "0", { "Ref" : "EnabledAZs" } ] },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
          { "Key": "Name", "Value" : "PublicSubnet"}
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
          { "Key": "Name", "Value" : "InternetGateway"}
        ]
      }
    },

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "DependsOn" : ["VPC", "InternetGateway"],
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
          { "Key": "Name", "Value" : "PublicRouteTable"}
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : ["PublicRouteTable", "InternetGateway"],
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn" : [ "PublicRouteTable",  "PublicSubnet"],
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
          { "Key": "Name", "Value" : "PublicNetworkACL"}
        ]
      }
    },

    "InboundHTTPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PublicNetworkAcl",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutboundPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PublicNetworkAcl",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PublicSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [ "PublicSubnet", "PublicNetworkAcl"],
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PrivateSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Private1", "CIDR" ]},
        "AvailabilityZone": { "Fn::Select" : [ "0", { "Ref" : "EnabledAZs" } ] },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private1" },
          { "Key": "Name", "Value" : "PrivateSubnet1"}
        ]
      }
    },

    "PrivateRouteTable1" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private1" },
          { "Key": "Name", "Value" : "PrivateRouteTable1"}
        ]
      }
    },

    "PrivateSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn" : [ "PrivateSubnet1", "PrivateRouteTable1" ],
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable1" }
      }
    },

    "PrivateRoute1" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : ["PrivateRouteTable1", "NATDevice" ],
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATDevice" }
      }
    },

    "PrivateNetworkAcl1" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private1" },
          { "Key": "Name", "Value" : "PrivateNetworkACL1"}
        ]
      }
    },

    "InboundPrivateNetworkAclEntry1" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl1",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl1" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutBoundPrivateNetworkAclEntry1" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl1",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl1" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PrivateSubnetNetworkAclAssociation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn" : ["PrivateSubnet1", "PrivateNetworkAcl1"],
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl1" }
      }
    },


    "PrivateSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Private2", "CIDR" ]},
        "AvailabilityZone": { "Fn::Select" : [ "0", { "Ref" : "EnabledAZs" } ] },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private2" },
          { "Key": "Name", "Value" : "PrivateSubnet2"}
        ]
      }
    },

    "PrivateRouteTable2" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private2" },
          { "Key": "Name", "Value" : "PrivateRouteTable2"}
        ]
      }
    },

    "PrivateSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn" : [ "PrivateSubnet2", "PrivateNetworkAcl2" ],
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable2" }
      }
    },

    "PrivateRoute2" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : [ "PrivateRouteTable2", "NATDevice" ],
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATDevice" }
      }
    },

    "PrivateNetworkAcl2" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private2" },
          { "Key": "Name", "Value" : "PrivateNetworkACL2"}
        ]
      }
    },

    "InboundPrivateNetworkAclEntry2" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl2",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl2" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "InboundSSHPrivateNetworkAclEntry2" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl2",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl2" },
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },

    "OutBoundPrivateNetworkAclEntry2" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl2",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl2" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutBoundSSHPrivateNetworkAclEntry2" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl2",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl2" },
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },
    
    "PrivateSubnetNetworkAclAssociation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn" : ["PrivateSubnet2", "PrivateNetworkAcl2"],
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl2" }
      }
    },

    "NATDevice" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PublicSubnet",
      "Properties" : {
        "InstanceType" : { "Ref" : "NATInstanceType" },
        "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "Tags" : [{ "Key": "Name", "Value" : "RHS-NAT"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}],
        "SecurityGroupIds" : [{ "Ref" : "NATSG" }]
      }
    },

    "NATIPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : "NATDevice",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "NATDevice" }
      }
    },

    "PrivateNet1rhgs1" : {
     "Type" : "AWS::EC2::NetworkInterface",
     "Properties" : {
        "Tags": [{"Key":"Name","Value":"FirstInterface"}],
        "Description": "This is a first private network interface for rhgs nodes",
        "SourceDestCheck": "false",
        "GroupSet": [{ "Ref" : "RedHatServerSG" }],
        "SubnetId": {"Ref" : "PrivateSubnet1"},
        "PrivateIpAddress": "10.100.1.11"
      }
    },

    "PublicNet1rhgs1" : {
     "Type" : "AWS::EC2::NetworkInterface",
     "Properties" : {
        "Tags": [{"Key":"Name","Value":"FirstPublicInterface"}],
        "Description": "This is a first public network interface for rhgs nodes",
        "SourceDestCheck": "false",
        "GroupSet": [{ "Ref" : "RedHatServerSG" }],
        "SubnetId": {"Ref" : "PublicSubnet"},
        "PrivateIpAddress": "10.100.0.11"
      }
    },

    "PrivateNet1rhgs2" : {
     "Type" : "AWS::EC2::NetworkInterface",
     "Properties" : {
        "Tags": [{"Key":"Name","Value":"FirstInterface"}],
        "Description": "This is a first private network interface for rhgs nodes",
        "SourceDestCheck": "false",
        "GroupSet": [{ "Ref" : "RedHatServerSG" }],
        "SubnetId": {"Ref" : "PrivateSubnet1"},
        "PrivateIpAddress": "10.100.1.12"
      }
    },

    "PrivateNet1rhgs3" : {
     "Type" : "AWS::EC2::NetworkInterface",
     "Properties" : {
        "Tags": [{"Key":"Name","Value":"FirstInterface"}],
        "Description": "This is a first private network interface for rhgs nodes",
        "SourceDestCheck": "false",
        "GroupSet": [{ "Ref" : "RedHatServerSG" }],
        "SubnetId": {"Ref" : "PrivateSubnet1"},
        "PrivateIpAddress": "10.100.1.13"
      }
    },

    "PrivateNet1rhgs4" : {
     "Type" : "AWS::EC2::NetworkInterface",
     "Properties" : {
        "Tags": [{"Key":"Name","Value":"FirstInterface"}],
        "Description": "This is a first private network interface for rhgs nodes",
        "SourceDestCheck": "false",
        "GroupSet": [{ "Ref" : "RedHatServerSG" }],
        "SubnetId": {"Ref" : "PrivateSubnet1"},
        "PrivateIpAddress": "10.100.1.14"
      }
    },

    "PrivateNet1rhgs5" : {
     "Type" : "AWS::EC2::NetworkInterface",
     "Properties" : {
        "Tags": [{"Key":"Name","Value":"FirstInterface"}],
        "Description": "This is a first private network interface for rhgs nodes",
        "SourceDestCheck": "false",
        "GroupSet": [{ "Ref" : "RedHatServerSG" }],
        "SubnetId": {"Ref" : "PrivateSubnet1"},
        "PrivateIpAddress": "10.100.1.15"
      }
    },

    "PrivateNet1rhgs6" : {
     "Type" : "AWS::EC2::NetworkInterface",
     "Properties" : {
        "Tags": [{"Key":"Name","Value":"FirstInterface"}],
        "Description": "This is a first private network interface for rhgs nodes",
        "SourceDestCheck": "false",
        "GroupSet": [{ "Ref" : "RedHatServerSG" }],
        "SubnetId": {"Ref" : "PrivateSubnet1"},
        "PrivateIpAddress": "10.100.1.16"
      }
    },

    "rhgs1" : {
      "Type" : "AWS::EC2::Instance",
       "Metadata": {
          "AWS::CloudFormation::Init": {
            "config": {
              "packages": {
                "yum": {
                  "ntp" : [],
                  "sshd" : []
                }
              }
            }
          }
        }, 
      "DependsOn" : "PublicSubnet",
      "Properties" : {
        "InstanceType" : { "Ref" : "RedHatStorageServerInstanceType" },
        "KeyName"  : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "RHSSERVERAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "NetworkInterfaces" : [ 
          {
            "NetworkInterfaceId" : {"Ref" : "PrivateNet1rhgs1"}, "DeviceIndex" : "0" 
          },
          {
            "NetworkInterfaceId" : {"Ref" : "PublicNet1rhgs1"}, "DeviceIndex" : "1" 
          }
        ],
        "Tags" : [{ "Key": "Name", "Value" : "rhgs1"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}],
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sdb",
            "VirtualName" : "gluster-brick-xvdb",
            "Ebs" : { 
              "VolumeSize" : "10",
              "VolumeType": "gp2"
            }
          },{
            "DeviceName" : "/dev/sdc",
            "VirtualName" : "gluster-brick-xvdc",
            "Ebs" : { 
              "VolumeSize" : "10",
              "VolumeType": "gp2"
            }
          },{
            "DeviceName" : "/dev/sdd",
            "VirtualName" : "gluster-brick-xvdd",
            "Ebs" : { 
              "VolumeSize" : "10",
              "VolumeType": "gp2"
            }
          }
        ]
      }
    },

    "rhgs1NodeIPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : ["rhgs1","InternetGateway"],
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "Assocrhgs1NodeIPAddress" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": { "Fn::GetAtt" : [ "rhgs1NodeIPAddress", "AllocationId" ] },
        "NetworkInterfaceId": {"Ref" : "PublicNet1rhgs1"}
      }
    },

    "NATSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "DependsOn" : "VPC",
      "Properties" : {
        "GroupDescription" : "Enable internal access to the NAT device",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "-1", "FromPort" : "0",  "ToPort" : "65535",  "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" }
          ],
        "SecurityGroupEgress" : [
          { "IpProtocol" : "-1", "FromPort" : "0",  "ToPort" : "65535",  "CidrIp" : "0.0.0.0/0" }]
      }
    },

    "RedHatServerSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "DependsOn" : "VPC",
      "Properties" : {
        "GroupDescription" : "Enable access to the RedHatStorage Server devices",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
           { "IpProtocol" : "-1", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "0.0.0.0/0" },
           { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
           { "IpProtocol" : "tcp", "FromPort" : "8123", "ToPort" : "8123", "CidrIp" : "0.0.0.0/0" },
           { "IpProtocol" : "icmp", "FromPort" : "8", "ToPort" : "-1", "CidrIp" : "0.0.0.0/0" }
           ],
        "SecurityGroupEgress" : [
           { "IpProtocol" : "-1", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "0.0.0.0/0" }]
      }
    }
},


  "Outputs" : {
   "rhgs1PublicIP" : {
      "Description" : "rhgs1 Node Public IP Address Username: gluster Password: Redhat16",
      "Value" :  { "Ref" : "rhgs1NodeIPAddress" }
   },
   "username" : {
      "Description" : "rhgs1 Node Username",
      "Value" : "rhsone"
   },
   "password" : {
      "Description" : "rhgs1 Node Password",
      "Value" : "Redhat16"
   }

  }
}
